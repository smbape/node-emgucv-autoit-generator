//----------------------------------------------------------------------------
//
//  Copyright (C) 2004-2021 by EMGU Corporation. All rights reserved.
//
//  Vector of Rect
//
//  This file is automatically generated, do not modify.
//----------------------------------------------------------------------------


#pragma once
#ifndef EMGU_VECTOR_Rect_H
#define EMGU_VECTOR_Rect_H

#include "vectors_c.h"

#if 1



//----------------------------------------------------------------------------
//
//  Vector of Rect
//
//----------------------------------------------------------------------------
CVAPI(std::vector< cv::Rect >*) VectorOfRectCreate();

CVAPI(std::vector< cv::Rect >*) VectorOfRectCreateSize(int size);

CVAPI(int) VectorOfRectGetSize(std::vector< cv::Rect >* v);

CVAPI(void) VectorOfRectPush(std::vector< cv::Rect >* v, cv::Rect* value);

CVAPI(void) VectorOfRectPushMulti(std::vector< cv::Rect >* v, cv::Rect* values, int count);

CVAPI(void) VectorOfRectPushVector(std::vector< cv::Rect >* v, std::vector< cv::Rect >* other);

CVAPI(void) VectorOfRectClear(std::vector< cv::Rect >* v);

CVAPI(void) VectorOfRectRelease(std::vector< cv::Rect >** v);

CVAPI(void) VectorOfRectCopyData(std::vector< cv::Rect >* v,  cv::Rect* data);

CVAPI(cv::Rect*) VectorOfRectGetStartAddress(std::vector< cv::Rect >* v);

CVAPI(void*) VectorOfRectGetEndAddress(std::vector< cv::Rect >* v);

CVAPI(void) VectorOfRectGetItem(std::vector<  cv::Rect >* vec, int index,  cv::Rect* element);

CVAPI(void) VectorOfRectGetItemPtr(std::vector<  cv::Rect >* vec, int index,  cv::Rect** element);

#if true
CVAPI(cv::_InputArray*) cveInputArrayFromVectorOfRect(std::vector< cv::Rect >* vec);

CVAPI(cv::_OutputArray*) cveOutputArrayFromVectorOfRect(std::vector< cv::Rect >* vec);

CVAPI(cv::_InputOutputArray*) cveInputOutputArrayFromVectorOfRect(std::vector< cv::Rect >* vec);
#endif

CVAPI(int) VectorOfRectSizeOfItemInBytes();

#else

static inline CV_NORETURN void throw_no_vector() { CV_Error(cv::Error::StsBadFunc, "The library is compiled without VectorOfRect support"); }

CVAPI(void*) VectorOfRectCreate();

CVAPI(void*) VectorOfRectCreateSize(int size);

CVAPI(int) VectorOfRectGetSize(void* v);

CVAPI(void) VectorOfRectPush(void* v, void* value);

CVAPI(void) VectorOfRectPushMulti(void* v, void* values, int count);

CVAPI(void) VectorOfRectPushVector(void* v, void* other);

CVAPI(void) VectorOfRectClear(void* v);

CVAPI(void) VectorOfRectRelease(void** v);

CVAPI(void) VectorOfRectCopyData(void* v,  void* data);

CVAPI(void*) VectorOfRectGetStartAddress(void* v);

CVAPI(void) VectorOfRectGetItem(void* vec, int index, void* element);

CVAPI(void) VectorOfRectGetItemPtr(void* vec, int index, void** element);

#if true
CVAPI(cv::_InputArray*) cveInputArrayFromVectorOfRect(void* vec);

CVAPI(cv::_OutputArray*) cveOutputArrayFromVectorOfRect(void* vec);

CVAPI(cv::_InputOutputArray*) cveInputOutputArrayFromVectorOfRect(void* vec);
#endif

CVAPI(int) VectorOfRectSizeOfItemInBytes();
#endif


#endif
